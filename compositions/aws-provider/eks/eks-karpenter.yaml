# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0

apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: xamazonekss-subnet-labels.cluster.awsblueprints.io
  labels:
    awsblueprints.io/provider: aws
    awsblueprints.io/environment: dev
    awsblueprints.io/subnet-selection: label
    crossplane.io/xrd: xamazonekss.cluster.awsblueprints.io
    service: eks-karpenter
spec:
  writeConnectionSecretsToNamespace: crossplane-system
  compositeTypeRef:
    apiVersion: cluster.awsblueprints.io/v1alpha1
    kind: XAmazonEks
  patchSets:
    - name: common-parameters
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.providerConfigName
          toFieldPath: spec.providerConfigRef.name
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.deletionPolicy
          toFieldPath: spec.deletionPolicy
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.region
          toFieldPath: spec.forProvider.region
  resources:
    - name: vpc
      base:
        apiVersion: network.awsblueprints.io/v1alpha1
        kind: XVpcSubnet
        spec:
          compositionSelector:
            matchLabels:
              awsblueprints.io/provider: aws
              awsblueprints.io/environment: dev
              awsblueprints.io/network-id: "false"
              service: vpcsubnet
          parameters:
            #vpc input
            vpc-Name: xplane-vpc
            vpc-cidrBlock: "10.20.0.0/17"   # 32768 IPs
            vpc-amazonProvidedIpv6CidrBlock: false
            #public subnet1
            publicSubnet1-cidrBlock: "10.20.0.0/21" # 2048 IPs
            publicSubnet1-availabilityZone: eu-west-1a
            #public subnet2
            publicSubnet2-cidrBlock: "10.20.8.0/21" # 2048 IPs
            publicSubnet2-availabilityZone: eu-west-1b
            #public subnet3
            publicSubnet3-cidrBlock: "10.20.16.0/21" # 2048 IPs
            publicSubnet3-availabilityZone: eu-west-1c
            #private subnet1
            privateSubnet1-cidrBlock: "10.20.64.0/21" # 2048 IPs
            privateSubnet1-availabilityZone: eu-west-1a
            #private subnet2
            privateSubnet2-cidrBlock: "10.20.72.0/21" # 2048 IPs
            privateSubnet2-availabilityZone: eu-west-1b
            #private subnet3
            privateSubnet3-cidrBlock: "10.20.80.0/21" # 2048 IPs
            privateSubnet3-availabilityZone: eu-west-1c
      patches:
        - fromFieldPath: spec.resourceConfig
          toFieldPath: spec.resourceConfig
        - fromFieldPath: spec.resourceConfig.region
          toFieldPath: spec.parameters.publicSubnet1-availabilityZone
          transforms:
            - type: string
              string:
                fmt: "%sa"
        - fromFieldPath: spec.resourceConfig.region
          toFieldPath: spec.parameters.publicSubnet2-availabilityZone
          transforms:
            - type: string
              string:
                fmt: "%sb"
        - fromFieldPath: spec.resourceConfig.region
          toFieldPath: spec.parameters.publicSubnet3-availabilityZone
          transforms:
            - type: string
              string:
                fmt: "%sc"
        - fromFieldPath: spec.resourceConfig.region
          toFieldPath: spec.parameters.privateSubnet1-availabilityZone
          transforms:
            - type: string
              string:
                fmt: "%sa"
        - fromFieldPath: spec.resourceConfig.region
          toFieldPath: spec.parameters.privateSubnet2-availabilityZone
          transforms:
            - type: string
              string:
                fmt: "%sb"
        - fromFieldPath: spec.resourceConfig.region
          toFieldPath: spec.parameters.privateSubnet3-availabilityZone
          transforms:
            - type: string
              string:
                fmt: "%sc"
    - name: eks-cluster
      base:
        apiVersion: eks.aws.crossplane.io/v1beta1
        kind: Cluster
        metadata:
          labels:
            role: controlplane
        spec:
          forProvider:
            version:
            roleArnSelector:
              matchLabels:
                role: controlplane
                crossplane.io/claim-name:
            resourcesVpcConfig:
              endpointPrivateAccess:
              endpointPublicAccess:
              subnetIdSelector:
                matchLabels:
                  type: subnet
          writeConnectionSecretToRef:
            namespace: crossplane-system
      patches:
        - type: PatchSet
          patchSetName: common-parameters
        - fromFieldPath: spec.parameters.version
          toFieldPath: spec.forProvider.version
        - fromFieldPath: spec.parameters.endpointPrivateAccess
          toFieldPath: spec.forProvider.resourcesVpcConfig.endpointPrivateAccess
        - fromFieldPath: spec.parameters.endpointPublicAccess
          toFieldPath: spec.forProvider.resourcesVpcConfig.endpointPublicAccess
        - fromFieldPath: metadata.uid
          toFieldPath: spec.writeConnectionSecretToRef.name
          transforms:
            - type: string
              string:
                fmt: "%s-eks-cluster-conn"
        - fromFieldPath: spec.writeConnectionSecretToRef.namespace
          toFieldPath: spec.writeConnectionSecretToRef.namespace
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.identity.oidc.issuer
          toFieldPath: status.oidcIssuer
        - fromFieldPath: metadata.labels[crossplane.io/claim-name]
          toFieldPath: spec.forProvider.resourcesVpcConfig.subnetIdSelector.matchLabels[crossplane.io/claim-name]
          policy:
            fromFieldPath: Required
      connectionDetails:
        - name: cluster-ca
          fromConnectionSecretKey: clusterCA
        - name: apiserver-endpoint
          fromConnectionSecretKey: endpoint
        - name: kubeconfig
          fromConnectionSecretKey: kubeconfig
    - name: eks-cluster-role
      base:
        apiVersion: iam.aws.crossplane.io/v1beta1
        kind: Role
        metadata:
          labels:
            role: controlplane
        spec:
          forProvider:
            assumeRolePolicyDocument: |
              {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": [
                                "eks.amazonaws.com"
                            ]
                        },
                        "Action": [
                            "sts:AssumeRole"
                        ]
                    }
                ]
              }
      patches:
        - type: PatchSet
          patchSetName: common-parameters
    - name: eks-cluster-policy
      base:
        apiVersion: iam.aws.crossplane.io/v1beta1
        kind: RolePolicyAttachment
        spec:
          forProvider:
            policyArn: arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
            roleNameSelector:
              matchControllerRef: true
              matchLabels:
                role: controlplane
      patches:
        - type: PatchSet
          patchSetName: common-parameters
    - name: eks-service-policy
      base:
        apiVersion: iam.aws.crossplane.io/v1beta1
        kind: RolePolicyAttachment
        spec:
          forProvider:
            policyArn: arn:aws:iam::aws:policy/AmazonEKSServicePolicy
            roleNameSelector:
              matchControllerRef: true
              matchLabels:
                role: controlplane
      patches:
        - type: PatchSet
          patchSetName: common-parameters
    - name: eks-vpcresource-controller-policy
      base:
        apiVersion: iam.aws.crossplane.io/v1beta1
        kind: RolePolicyAttachment
        spec:
          forProvider:
            policyArn: arn:aws:iam::aws:policy/AmazonEKSVPCResourceController
            roleNameSelector:
              matchControllerRef: true
              matchLabels:
                role: controlplane
      patches:
        - type: PatchSet
          patchSetName: common-parameters
    - name: eks-oidc
      base:
        apiVersion: iam.aws.crossplane.io/v1beta1
        kind: OpenIDConnectProvider
        spec:
          forProvider:
            clientIDList:
              - sts.amazonaws.com
            thumbprintList:
              - "9e99a48a9960b14926bb7f3b02e22da2b0ab7280" # may change in the future
      patches:
        - type: PatchSet
          patchSetName: common-parameters
        - fromFieldPath: status.oidcIssuer
          toFieldPath: spec.forProvider.url
          policy:
            fromFieldPath: Required
# EKS Managed Node groups
    - name: eks-managed-nodegroups
      base:
        apiVersion: eks.aws.crossplane.io/v1alpha1
        kind: NodeGroup
        spec:
          forProvider:
            amiType:
            clusterNameSelector:
              matchControllerRef: true
              matchLabels:
                role: controlplane
            nodeRoleSelector:
              matchControllerRef: true
              matchLabels:
                role: managed-nodegroup
            subnetSelector:
              matchLabels:
                visibility: private
            scalingConfig:
              minSize:
              desiredSize:
              maxSize:
            capacityType:
            instanceTypes:
      patches:
        - type: PatchSet
          patchSetName: common-parameters
        - fromFieldPath: metadata.annotations[crossplane.io/external-name]
          toFieldPath: metadata.annotations[crossplane.io/external-name]
        - fromFieldPath: spec.managedNodeGroups.minSize
          toFieldPath: spec.forProvider.scalingConfig.minSize
        - fromFieldPath: spec.managedNodeGroups.maxSize
          toFieldPath: spec.forProvider.scalingConfig.maxSize
        - fromFieldPath: spec.managedNodeGroups.desiredSize
          toFieldPath: spec.forProvider.scalingConfig.desiredSize
        - fromFieldPath: spec.managedNodeGroups.desiredSize
          toFieldPath: spec.forProvider.scalingConfig.desiredSize
        - fromFieldPath: spec.managedNodeGroups.capacityType
          toFieldPath: spec.forProvider.capacityType
        - fromFieldPath: spec.managedNodeGroups.instanceTypes
          toFieldPath: spec.forProvider.instanceTypes
        - fromFieldPath: spec.managedNodeGroups.amiType
          toFieldPath: spec.forProvider.amiType
        - fromFieldPath: metadata.labels[crossplane.io/claim-name]
          toFieldPath: spec.forProvider.subnetSelector.matchLabels[crossplane.io/claim-name]
          policy:
            fromFieldPath: Required
    - name: eks-managed-nodegroup-iam-role
      base:
        apiVersion: iam.aws.crossplane.io/v1beta1
        kind: Role
        metadata:
          labels:
            role: managed-nodegroup
        spec:
          forProvider:
            assumeRolePolicyDocument: |
              {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": [
                                "ec2.amazonaws.com"
                            ]
                        },
                        "Action": [
                            "sts:AssumeRole"
                        ]
                    }
                ]
              }
      patches:
        - type: PatchSet
          patchSetName: common-parameters
    - name: eks-managed-nodegroup-worker-node-policy
      base:
        apiVersion: iam.aws.crossplane.io/v1beta1
        kind: RolePolicyAttachment
        spec:
          forProvider:
            policyArn: arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
            roleNameSelector:
              matchControllerRef: true
              matchLabels:
                role:  managed-nodegroup
      patches:
        - type: PatchSet
          patchSetName: common-parameters
    - name: eks-managed-nodegroup-container-registry-policy
      base:
        apiVersion: iam.aws.crossplane.io/v1beta1
        kind: RolePolicyAttachment
        spec:
          forProvider:
            policyArn: arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
            roleNameSelector:
              matchControllerRef: true
              matchLabels:
                role: managed-nodegroup
      patches:
        - type: PatchSet
          patchSetName: common-parameters
    - name: eks-managed-nodegroup-ssm-policy
      base:
        apiVersion: iam.aws.crossplane.io/v1beta1
        kind: RolePolicyAttachment
        spec:
          forProvider:
            policyArn: arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
            roleNameSelector:
              matchControllerRef: true
              matchLabels:
                role: managed-nodegroup
      patches:
        - type: PatchSet
          patchSetName: common-parameters
    - name: eks-managed-nodegroup-cni-policy
      base:
        apiVersion: iam.aws.crossplane.io/v1beta1
        kind: RolePolicyAttachment
        spec:
          forProvider:
            policyArn: arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
            roleNameSelector:
              matchControllerRef: true
              matchLabels:
                role: managed-nodegroup
      patches:
        - type: PatchSet
          patchSetName: common-parameters
    - name: eks-csi-driver
      base:
        apiVersion: eks.aws.crossplane.io/v1alpha1
        kind: Addon
        metadata:
        spec:
          forProvider:
            addonName: aws-ebs-csi-driver
            addonVersion: v1.18.0-eksbuild.1
            clusterNameSelector:
              matchControllerRef: true
              matchLabels:
                role: controlplane  
            resolveConflicts: OVERWRITE
            serviceAccountRoleArnSelector:
              matchControllerRef: true
              matchLabels:
                role: controlplane
      patches:
        - type: PatchSet
          patchSetName: common-parameters
    # Crossplane Kubernetes ProviderConfig for this EKS Cluster
    - name: eks-k8s-provider-config
      base:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: ProviderConfig
        metadata:
          name: k8s-project-name
        spec:
          credentials:
            source: Secret
            secretRef:
              namespace: crossplane-system
              name: ""
              key: kubeconfig
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.uid
          toFieldPath: spec.credentials.secretRef.name
          transforms:
            - type: string
              string:
                fmt: "%s-eks-cluster-conn"
          policy:
            fromFieldPath: Required
        - fromFieldPath: metadata.labels[crossplane.io/claim-name]
          toFieldPath: metadata.name
          policy:
            fromFieldPath: Required
      readinessChecks:
        - type: None
    # Crossplane Helm ProviderConfig for this EKS Cluster
    - name: eks-helm-provider-config
      base:
        apiVersion: helm.crossplane.io/v1beta1
        kind: ProviderConfig
        metadata:
          name: helm-project-name
        spec:
          credentials:
            source: Secret
            secretRef:
              namespace: crossplane-system
              name: ""
              key: kubeconfig
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.uid
          toFieldPath: spec.credentials.secretRef.name
          transforms:
            - type: string
              string:
                fmt: "%s-eks-cluster-conn"
        - fromFieldPath: metadata.labels[crossplane.io/claim-name]
          toFieldPath: metadata.name
          policy:
            fromFieldPath: Required
      readinessChecks:
        - type: None